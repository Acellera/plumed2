// This document is formatted for Doxygen
/**
\mainpage Introduction

This is the developer manual. Please first have a look at the <a href="../../user-doc/html/index.html"> user manual </a>.

Plumed 2.0 is written in C++ and uses many of the advanced, object-oriented features of this language.  This structure makes the implementation of collective coordinates and free energy methods straightforward.  In fact, it should be possible to implement methods and collective coordinates (CV) by creating a single file and without touching any other part of the code. Futhermore, to implement new methodology does not require one to be some sort of C++ wizzard. Rather, the code has been specifically redisigned to make the implementation of new CVs and new free energy methods straightforward so as to encourage people to implement whatever new functionality they require.  This document serves then to provide an introduction as to how to go about implementing new functionality in plumed.   Within there are templates that give step by step explanation for how to implement new CVs, free energy methods and functions:    

- \ref HowToAddACollectiveVariable
- \ref HowToAddAFunction
- \ref HowToAddABias 

For more curious contributors we provide a brief introduction to the internal structure of plumed here:

\ref ABriefIntroduction 

And finally, for the developers of MD codes, we provide information as to how to incorperate plumed into your codes here:

\ref HowToPlumedYourMD

Lastly, we ask that contributors endeavor to maintain the portability of plumed by, as much as possible, using only the STL library and lapack in modifications.  If you need to use any less standard library (e.g. Boost, Sockets) please ensure that your functionality is not installed during a default compilation.  However, do feel free to provide alternative compilation options that incorperate your functionality.

Information about C++
http://www.parashift.com/c++-faq-lite/

*/
