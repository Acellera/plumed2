patch -u -l -b -F 5 --suffix=.preplumed "./src/kernel/Makefile" << \EOF_EOF
--- ./src/kernel/Makefile.preplumed
+++ ./src/kernel/Makefile
@@ -15,10 +15,11 @@
 
 
 # Note: Makefile is automatically generated from Makefile.in by the configure
 # script, and Makefile.in is generated from Makefile.am by automake.
 
+include ../../Plumed.inc
 
 
 pkgdatadir = $(datadir)/gromacs
 pkglibdir = $(libdir)/gromacs
 pkgincludedir = $(includedir)/gromacs
@@ -84,11 +85,11 @@
 	../gmxlib/libgmx_mpi_d.la
 am_mdrun_OBJECTS = glaasje.$(OBJEXT) gctio.$(OBJEXT) ionize.$(OBJEXT) \
 	do_gct.$(OBJEXT) repl_ex.$(OBJEXT) xutils.$(OBJEXT) \
 	md.$(OBJEXT) mdrun.$(OBJEXT) genalg.$(OBJEXT)
 mdrun_OBJECTS = $(am_mdrun_OBJECTS)
-mdrun_LDADD = $(LDADD)
+mdrun_LDADD = $(LDADD) $(PLUMED_LOAD)
 mdrun_DEPENDENCIES = $(noinst_LTLIBRARIES) \
 	../mdlib/libmd_mpi_d.la ../gmxlib/libgmx_mpi_d.la
 am_pdb2gmx_OBJECTS = pdb2gmx.$(OBJEXT)
 pdb2gmx_OBJECTS = $(am_pdb2gmx_OBJECTS)
 pdb2gmx_LDADD = $(LDADD)
EOF_EOF
patch -u -l -b -F 5 --suffix=.preplumed "./src/kernel/md.c" << \EOF_EOF
--- ./src/kernel/md.c.preplumed
+++ ./src/kernel/md.c
@@ -81,10 +81,17 @@
 #include "compute_io.h"
 #include "mvdata.h"
 #include "checkpoint.h"
 #include "mtop_util.h"
 
+/* PLUMED */
+#include "../../Plumed.h"
+extern int    plumedswitch;
+extern plumed plumedmain;
+/* END PLUMED */
+
+
 #ifdef GMX_MPI
 #include <mpi.h>
 #endif
 
 /* The following two variables and the signal_handler function
@@ -831,10 +838,41 @@
     snew(scale_tot,1);
   } else {
     scale_tot = NULL;
   }
 
+/* PLUMED */
+  if(plumedswitch){
+
+    if(PAR(cr)){
+      if(DOMAINDECOMP(cr)) {
+        plumed_cmd(plumedmain,"setMPIComm",&cr->dd->mpi_comm_all);
+      }else{
+        plumed_cmd(plumedmain,"setMPIComm",&cr->mpi_comm_mysim);
+      }
+    }
+
+    plumed_cmd(plumedmain,"setNatoms",&top_global->natoms);
+    plumed_cmd(plumedmain,"setMDEngine","gromacs");
+    plumed_cmd(plumedmain,"setLog",fplog);
+    plumed_cmd(plumedmain,"setTimestep",&ir->delta_t);
+
+    plumed_cmd(plumedmain,"init",NULL);
+
+    if(PAR(cr)){
+      if(DOMAINDECOMP(cr)) {
+        plumed_cmd(plumedmain,"setAtomsNlocal",&cr->dd->nat_home);
+        plumed_cmd(plumedmain,"setAtomsGatindex",cr->dd->gatindex);
+      }else{
+        plumed_cmd(plumedmain,"setAtomsNlocal",&mdatoms->homenr);
+        plumed_cmd(plumedmain,"setAtomsContiguous",&mdatoms->start);
+      }
+    }
+  }
+/* END PLUMED */
+
+
   /* Write start time */
   start_t=print_date_and_time(fplog,cr->nodeid,"Started mdrun");
   wallcycle_start(wcycle,ewcRUN);
   if (fplog)
     fprintf(fplog,"\n");
@@ -1068,10 +1106,16 @@
 	dd_partition_system(fplog,step,cr,bMasterState,
 			    state_global,top_global,ir,
 			    state,&f,&buf,mdatoms,top,fr,vsite,shellfc,constr,
 			    nrnb,wcycle,do_verbose);
 	wallcycle_stop(wcycle,ewcDOMDEC);
+/* PLUMED */
+        if(plumedswitch){
+          plumed_cmd(plumedmain,"setAtomsNlocal",&cr->dd->nat_home);
+          plumed_cmd(plumedmain,"setAtomsGatindex",cr->dd->gatindex);
+        }
+/* END PLUMED */
       }
     }
 
     if (MASTER(cr) && do_log && !bFFscan)
       print_ebin_header(fplog,step,t,state->lambda);
@@ -1128,17 +1172,39 @@
     else {
       /* The coordinates (x) are shifted (to get whole molecules) in do_force
        * This is parallellized as well, and does communication too. 
        * Check comments in sim_util.c
        */
+
+/* PLUMED */
+      if(plumedswitch){
+        plumed_cmd(plumedmain,"setStep",&step);
+        plumed_cmd(plumedmain,"setPositions",&state->x[mdatoms->start][0]);
+        plumed_cmd(plumedmain,"setMasses",&mdatoms->massT[mdatoms->start]);
+        plumed_cmd(plumedmain,"setCharges",&mdatoms->chargeA[mdatoms->start]);
+        plumed_cmd(plumedmain,"setBox",&state->box[0][0]);
+        plumed_cmd(plumedmain,"prepareCalc",NULL);
+      }
+/* END PLUMED */
+
       do_force(fplog,cr,ir,step,nrnb,wcycle,top,groups,
 	       state->box,state->x,&state->hist,
 	       f,buf,force_vir,mdatoms,enerd,fcd,
 	       state->lambda,graph,
 	       fr,vsite,mu_tot,t,fp_field,ed,
 	       GMX_FORCE_STATECHANGED | (bNS ? GMX_FORCE_NS : 0) |
 	       GMX_FORCE_ALLFORCES);
+
+/* PLUMED */
+      if(plumedswitch){
+        plumed_cmd(plumedmain,"setEnergy",&enerd->term[F_EPOT]);
+        plumed_cmd(plumedmain,"setForces",&f[mdatoms->start][0]);
+        plumed_cmd(plumedmain,"setVirial",&force_vir[0][0]);
+        plumed_cmd(plumedmain,"performCalc",NULL);
+      }
+/* END PLUMED */
+
     }
 
     GMX_BARRIER(cr->mpi_comm_mygroup);
 
     if (bTCR)
@@ -1603,10 +1669,17 @@
       if (DOMAINDECOMP(cr)) {
 	dd_partition_system(fplog,step,cr,TRUE,
 			    state_global,top_global,ir,
 			    state,&f,&buf,mdatoms,top,fr,vsite,shellfc,constr,
 			    nrnb,wcycle,FALSE);
+/* PLUMED */
+        if(plumedswitch){
+          plumed_cmd(plumedmain,"setAtomsNlocal",&cr->dd->nat_home);
+          plumed_cmd(plumedmain,"setAtomsGatindex",cr->dd->gatindex);
+        }
+/* END PLUMED */
+
       } else {
 	bcast_state(cr,state,FALSE);
       }
     }
     
EOF_EOF
patch -u -l -b -F 5 --suffix=.preplumed "./src/kernel/mdrun.c" << \EOF_EOF
--- ./src/kernel/mdrun.c.preplumed
+++ ./src/kernel/mdrun.c
@@ -51,10 +51,16 @@
 #include "checkpoint.h"
 
 /* afm stuf */
 #include "pull.h"
 
+/* PLUMED */
+#include "../../Plumed.h"
+int    plumedswitch;
+plumed plumedmain;
+/* END PLUMED */
+
 int main(int argc,char *argv[])
 {
   static char *desc[] = {
     "The mdrun program is the main computational chemistry engine",
     "within GROMACS. Obviously, it performs Molecular Dynamics simulations,",
@@ -274,11 +280,12 @@
     { efXVG, "-devout", "deviatie", ffOPTWR },
     { efXVG, "-runav",  "runaver",  ffOPTWR },
     { efXVG, "-px",     "pullx",    ffOPTWR },
     { efXVG, "-pf",     "pullf",    ffOPTWR },
     { efMTX, "-mtx",    "nm",       ffOPTWR },
-    { efNDX, "-dn",     "dipole",   ffOPTWR }
+    { efNDX, "-dn",     "dipole",   ffOPTWR },
+    { efDAT, "-plumed", "plumed",   ffOPTRD }   /* PLUMED */
   };
 #define NFILE asize(fnm)
 
   /* Command line options ! */
   static bool bCart        = FALSE;
@@ -490,17 +497,49 @@
     ed=NULL;
     
   ddxyz[XX] = (int)(realddxyz[XX] + 0.5);
   ddxyz[YY] = (int)(realddxyz[YY] + 0.5);
   ddxyz[ZZ] = (int)(realddxyz[ZZ] + 0.5);
+
+/* PLUMED */
+  plumedswitch=0;
+  if (opt2bSet("-plumed",NFILE,fnm)) plumedswitch=1;
+  if(plumedswitch){
+    int plumed_is_there=0;
+    int real_precision=sizeof(real);
+    real energyUnits=1.0;
+    real lengthUnits=1.0;
+    real timeUnits=1.0;
+
+
+    if(!plumed_installed()){
+      gmx_fatal(FARGS,"Plumed is not available. Check your PLUMED_KERNEL variable.");
+    }
+    plumedmain=plumed_create();
+    plumed_cmd(plumedmain,"setRealPrecision",&real_precision);
+// this is not necessary for gromacs units:
+    plumed_cmd(plumedmain,"setMDEnergyUnits",&energyUnits);
+    plumed_cmd(plumedmain,"setMDLengthUnits",&lengthUnits);
+    plumed_cmd(plumedmain,"setMDTimeUnits",&timeUnits);
+//
+    plumed_cmd(plumedmain,"setPlumedDat",ftp2fn(efDAT,NFILE,fnm));
+    plumedswitch=1;
+  }
+/* END PLUMED */
   
   mdrunner(fplog,cr,NFILE,fnm,bVerbose,bCompact,
 	   ddxyz,dd_node_order,rdd,rconstr,
 	   dddlb_opt[0],dlb_scale,ddcsx,ddcsy,ddcsz,
 	   nstepout,ed,repl_ex_nst,repl_ex_seed,pforce,
 	   cpt_period,max_hours,Flags);
   
+/* PLUMED */
+  if(plumedswitch){
+    plumed_finalize(plumedmain);
+  }
+/* END PLUMED */
+
   if (gmx_parallel_env)
     gmx_finalize(cr);
 
   if (MULTIMASTER(cr)) {
     thanx(stderr);
EOF_EOF
